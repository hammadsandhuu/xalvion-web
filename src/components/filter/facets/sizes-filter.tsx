import cn from "classnames";export interface SizeOption {    id: string    label: string    count: number    value: string}interface SizesFilterProps {    sizes: SizeOption[]    selectedSizes: Record<string, boolean>    onSizeChange: (id: string, checked: boolean) => void}export function SizesFilter({ sizes, selectedSizes, onSizeChange }: SizesFilterProps) {    return (        <div className="grid grid-cols-4 gap-2">            {sizes.map((size) => (                <div key={size.id} className="relative">                    <input                        type="checkbox"                        id={`size-${size.id}`}                        checked={selectedSizes[size.id] || false}                        onChange={(e) => onSizeChange(size.id, e.target.checked)}                        className="peer sr-only"                    />                    <label                        htmlFor={`size-${size.id}`}                        className={cn(                            `peer-checked:border-blue-600 peer-checked:bg-blue-50 peer-checked:text-blue-600`,                            "flex h-9 w-full cursor-pointer items-center justify-center rounded-md border border-gray-200 bg-white text-13px  transition-colors hover:bg-gray-100 hover:text-gray-900 ")}                    >                        {size.label}                    </label>                    <span className="absolute -top-2 -right-2 flex h-4 w-4 items-center justify-center rounded-full bg-gray-200 text-[11px] text-gray-500">            {size.count}          </span>                </div>            ))}        </div>    )}